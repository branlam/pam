@{
  ViewData["Title"] = "Supervisors";
}

<body onload="javascript: stepIndicate()">
  <partial name="../Shared/_ProgressBar.cshtml" />
  <form asp-controller="NewRequest" asp-action="Review" method="get" id="supervisorReview">
    <div class="alert alert-info">
      Step 7 - Select the supervisor(s) to review this request.
    </div>
    <div class="form-row">
      <div class="autocomplete form-group" style="width:400px;">
        <label for="supervisor">Supervisors</label>
        <input id="adEmployees" name="supervisor" class="form-control" type="text" placeholder="Supervisor" autocomplete="off" value="">
      </div>
    </div>
    <button type="button" class="btn btn-info float-right m-3" onclick="validateReviewer()"> Next </button>
  </form>
  <form asp-controller="NewRequest" asp-action="RequestInfo" method="get">
    <button type="submit" class="btn btn-info float-right m-3" style="display:inline-block">Previous</button>
  </form>
  <script>
  function validateReviewer() {
    if (!validateSupervisor()) return false;
    else document.getElementById("supervisorReview").submit();
  }

  function validateSupervisor() {
    // This function deals with validation of the form fields
    let valid = true;
    let y = document.getElementById("adEmployees");
    // A loop that checks every input field in the current tab:
    for (let i = 0; i < y.length; i++) {
      alert(y.length);
        // If a field is empty...
        if (y[i].value == "") {
          // add an "invalid" class to the field:
          y[i].className += " invalid";
          // and set the current valid status to false:
          valid = false;
      }
    }
    return valid;
  }
  var supervisors = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["adEmployees"]));
  </script>

</body>
